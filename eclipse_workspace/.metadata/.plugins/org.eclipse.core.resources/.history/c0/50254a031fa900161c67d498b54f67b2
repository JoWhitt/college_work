//package cs.tcd.ie;

import java.net.DatagramPacket;
import java.net.DatagramSocket;

import tcdIO.Terminal;

public class Server extends Node {
	static final int DEFAULT_PORT = 50001;

	Terminal terminal;
	
	Server(Terminal terminal, int port) {
		try {
			//packetToSend = 1; //TODO: is this needed?
			expectedPacketNumber = 0;
			expectedPacketType = DATA_TRANSMIT_PACKET;
			
			this.terminal = terminal;
			socket = new DatagramSocket(port);
			listener.go();
		}
		catch(java.lang.Exception e) {e.printStackTrace();}
	}

	/**
	 * Assume that incoming packets contain a String and print the string.
	 */
	public void onReceipt(DatagramPacket packet) {
		try {
			StringContent content = new StringContent(packet);
			if (content.packetType==expectedPacketType && content.packetNumber==expectedPacketNumber) {
				terminal.println(content.toString());
				sendACK();
			}
			terminal.println(content.toString());

			DatagramPacket response;
			//TODO: response should be changed to include 0 or 1
			response = (new StringContent("OK")).toDatagramPacket();
			response.setSocketAddress(packet.getSocketAddress());
			socket.send(response);
		}
		catch(Exception e) {e.printStackTrace();}
	}

	public void updateExpectedPacketNumber() {
		expectedPacketNumber++;
		if (expectedPacketNumber>1)
			expectedPacketNumber=0;
	}
	
	private void sendACK() {
		
	}

	public synchronized void start() throws Exception {
		terminal.println("Waiting for contact");
		this.wait();
	}
	
	/*
	 * 
	 */
	public static void main(String[] args) {
		try {					
			Terminal terminal = new Terminal("Server");
			(new Server(terminal, DEFAULT_PORT)).start();
			terminal.println("Program completed");
		} catch(java.lang.Exception e) {e.printStackTrace();}
	}
}